<RadzenLayout style="grid-template-columns: auto 1fr auto; grid-template-areas: 'rz-header rz-header rz-header' 'rz-sidebar rz-body rz-right-sidebar'">
    <RadzenHeader Style="background-color:white;box-shadow:none;border-bottom:var(--rz-border-base-200);" >
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
            <RadzenSidebarToggle Click="@(() => sidebar1Expanded = !sidebar1Expanded)"
                Style="color:black;    
                       --rz-sidebar-toggle-hover-background-color:#6da6e3;
                       --rz-sidebar-toggle-margin:0.2rem;
                       --rz-sidebar-toggle-icon-width:1rem;
                       --rz-sidebar-toggle-icon-height:1rem;" />

            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem" Wrap="FlexWrap.Wrap" 
                         Style="margin:auto;--rz-button-border-radius:5rem;--rz-panel-border-radius:5rem;--rz-panel-padding:0.2rem;">
                <RadzenPanel >
                    <RadzenButton Icon="content_cut" ButtonStyle="ButtonStyle.Primary" />
                    <RadzenButton Icon="content_copy" ButtonStyle="ButtonStyle.Secondary" />
                    <RadzenButton Icon="content_paste" ButtonStyle="ButtonStyle.Light" />
                    <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Dark" />
                </RadzenPanel>
                <RadzenPanel >
                <RadzenButton Icon="undo" ButtonStyle="ButtonStyle.Primary" />
                <RadzenButton Icon="redo" ButtonStyle="ButtonStyle.Primary" />
                </RadzenPanel>
                <RadzenPanel >
                <RadzenButton Icon="zoom_in" ButtonStyle="ButtonStyle.Primary" />
                <RadzenButton Icon="zoom_out" ButtonStyle="ButtonStyle.Primary" />
                </RadzenPanel>
                <RadzenPanel >
                <RadzenButton Icon="save" ButtonStyle="ButtonStyle.Primary" />
                </RadzenPanel>
            </RadzenStack>
            <div style="width:1rem;height:1rem;margin:1rem;"></div>
        </RadzenStack>      
    </RadzenHeader>
    <RadzenSidebar Style="width:auto">
        <RadzenPanelMenu DisplayStyle="@(sidebar1Expanded?MenuItemDisplayStyle.IconAndText:MenuItemDisplayStyle.Icon)" ShowArrow=false>
            <RadzenPanelMenuItem Text="Label" Icon="text_fields" />
            <RadzenPanelMenuItem Text="Table" Icon="grid_on" />
            <RadzenPanelMenuItem Text="Picture Box" Icon="image" />
            <RadzenPanelMenuItem Text="Shapes" Icon="interests">
                <RadzenPanelMenuItem Text="Square" Icon="square" />
                <RadzenPanelMenuItem Text="Circle" Icon="circle" />
                <RadzenPanelMenuItem Text="Star" Icon="star" />
                <RadzenPanelMenuItem Text="Heart" Icon="favorite" />
            </RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="QR code" Icon="qr_code_2" />
        </RadzenPanelMenu>
    </RadzenSidebar>

    <RadzenBody>
        <div class="rz-p-4">
            Body
        </div>
    </RadzenBody>
    
    <RadzenSidebar @bind-Expanded="@showSidePanel" Style="width:auto; grid-area: rz-right-sidebar; height:inherit">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Stretch" JustifyContent="JustifyContent.SpaceBetween" Style="height:inherit;gap:0">
            <RadzenStack Orientation="Orientation.Vertical" Style="flex-direction:inherit !important; background-color:red; height:inherit;">
                <RadzenStack Orientation="Orientation.Vertical">      
                    @if (this.showRightSidePanel)
                    {
                        <RadzenPanelMenu Click="OnParentClicked" Style="width:300px" Multiple="@multiple">
                        @if (this.currentRightPanel == RightPanelType.Property)
                        {
                            <RadzenPanelMenuItem Text="General" Icon="home">
                                <RadzenPanelMenuItem Text="Buttons" Path="buttons" Icon="account_circle"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="Menu" Path="menu" Icon="line_weight"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="FileInput" Path="fileinput" Icon="attach_file"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="Dialog" Path="dialog" Icon="perm_media"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="Notification" Path="notification" Icon="announcement"></RadzenPanelMenuItem>
                            </RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="Inputs" Icon="payment">
                                <RadzenPanelMenuItem Text="CheckBox" Path="checkbox" Icon="check_circle"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="TextBox" Path="textbox" Icon="input"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="TextArea" Path="textarea" Icon="description"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="Password" Path="password" Icon="payment"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="Numeric" Path="numeric" Icon="aspect_ratio"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="DatePicker" Path="datepicker" Icon="date_range"></RadzenPanelMenuItem>
                            </RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="Data" Icon="save">
                                <RadzenPanelMenuItem Text="DataGrid" Path="datagrid" Icon="grid_on"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="DataList" Path="datalist" Icon="list"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="DropDown" Path="dropdown" Icon="dns"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="DropDownDataGrid" Path="dropdown-datagrid" Icon="receipt"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="ListBox" Path="listbox" Icon="view_list"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="TemplateForm" Path="templateform" Icon="line_style"></RadzenPanelMenuItem>
                            </RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="Containers" Icon="account_box">
                                <RadzenPanelMenuItem Text="Tabs" Path="tabs" Icon="tab"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="Panel" Path="panel" Icon="content_paste"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="Fieldset" Path="fieldset" Icon="account_balance_wallet"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="Card" Path="card" Icon="line_style"></RadzenPanelMenuItem>
                            </RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="More">
                                <RadzenPanelMenuItem Click="OnChildClicked" Text="Item1"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Click="OnChildClicked" Text="Item2"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="More items">
                                    <RadzenPanelMenuItem Text="More sub items">
                                        <RadzenPanelMenuItem Click="OnChildClicked" Text="Item3"></RadzenPanelMenuItem>
                                        <RadzenPanelMenuItem Click="OnChildClicked" Text="Item4"></RadzenPanelMenuItem>
                                    </RadzenPanelMenuItem>
                                </RadzenPanelMenuItem>
                            </RadzenPanelMenuItem>
                        }
                        </RadzenPanelMenu>
                    }
                </RadzenStack>
            </RadzenStack>
            <RadzenStack Orientation="Orientation.Vertical" Style="border-left: 1px solid lightgray;">
                <RadzenPanelMenu DisplayStyle="MenuItemDisplayStyle.Icon" ShowArrow=false>
                    <RadzenPanelMenuItem Text="Property" Icon="edit_attributes" Click="ShowRightPanel" />
                    <RadzenPanelMenuItem Text="FieldList" Icon="storage" Click="ShowRightPanel" />
                    <RadzenPanelMenuItem Text="ObjectBrowser" Icon="account_tree" Click="ShowRightPanel" />
                </RadzenPanelMenu>
            </RadzenStack>
        </RadzenStack>

    </RadzenSidebar>
   
   @*  <RadzenFooter>
        Footer
    </RadzenFooter> *@
</RadzenLayout>

@code {
    bool sidebar1Expanded = true;
    bool sidebar4Expanded = true;

    bool showSidePanel = false;
    FlexWrap wrap = FlexWrap.NoWrap;

    bool multiple = true;

    void OnParentClicked(MenuItemEventArgs args)
    {
    }

    void OnChildClicked(MenuItemEventArgs args)
    {
    }

    enum RightPanelType
    {
        Property,
        FieldList,
        ObjectBrowser
    }

    private RightPanelType currentRightPanel = RightPanelType.Property;
    private bool showRightSidePanel = false;
    void ShowRightPanel(MenuItemEventArgs args)
    {
        switch(args.Text.ToUpper())
        {
            case "PROPERTY":
                if (currentRightPanel == RightPanelType.Property && showRightSidePanel == true)
                {
                    this.showRightSidePanel = false;
                }
                else
                {
                    this.showRightSidePanel = true;
                    this.currentRightPanel = RightPanelType.Property;
                }
                break;
            case "FIELDLIST":
                if (currentRightPanel == RightPanelType.FieldList && showRightSidePanel == true)
                {
                    this.showRightSidePanel = false;
                }
                else
                {
                    this.showRightSidePanel = true;
                    this.currentRightPanel = RightPanelType.FieldList;
                }
                break;
            case "OBJECTBROWSER":
                if (currentRightPanel == RightPanelType.ObjectBrowser && showRightSidePanel == true)
                {
                    this.showRightSidePanel = false;
                }
                else
                {
                    this.showRightSidePanel = true;
                    this.currentRightPanel = RightPanelType.ObjectBrowser;
                }
                break;
        }

        StateHasChanged();
    }
}