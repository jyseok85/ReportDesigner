@page "/body"
@using Microsoft.JSInterop;
@inject DesignerOptionService Options
@inject IJSRuntime JsRuntime

<RadzenBody id="MainBody">
    <div class="report-background"
         style=@("transform:scale(" + designer.Zoom * 0.01f + ");margin:16px 0 0 " + leftOffset + "px;")>
        <RulerX Size="@Options.PaperSize.Width"></RulerX>
        <RulerY Size="@Options.PaperSize.Height"></RulerY>
        <Report Width="@Options.PaperSize.Width" Height="@Options.PaperSize.Height" />
    </div>
</RadzenBody>
<script>
    window.getBodyWidth = function () {
        return document.getElementById('MainBody').offsetWidth;
    };
</script>
<style>
    .report-background{
        transform-origin:top;
        position:absolute;
        top:0%;
        left:50%;
        /* report-background 가로사이즈의 절반 = 용지사이즈 + 좌측눈금자의 반 */
        transform: scale(1);
        padding:25px;
    }  
</style>
@code {

    [CascadingParameter]
    private Designer designer { get; set; }

    private int leftOffset = 0;



    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        Options.PaperSizeChanged += this.PaperSizeChanged;

        //todo 용지 사이즈를 초반에 셋팅해주는 부분이지만 이런코드를 넣는 위치를 바꿀 필요가 있다. 
        PaperSizeChanged(Options.PaperSize.Width, 0);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //자바스크립트에서 .Net을 호출하기 위한 객체 전달
        var lDotNetReference = DotNetObjectReference.Create(this);
        await JsRuntime.InvokeVoidAsync("GLOBAL.SetDotnetReference", lDotNetReference);

        //브라우저 사이즈시 콜백 추가
        await JsRuntime.InvokeAsync<object>("browserResize.registerResizeCallback");
    }
    [JSInvokable]
    public void OnBrowserResize()
    {
        PaperSizeChanged(Options.PaperSize.Width);
    }


    private void PaperSizeChanged(object? sender, int delay = 0)
    {
        Task.Factory.StartNew(async () =>
        {
            await Task.Delay(delay);

            int paperWidth = (int)sender;
            int bodyWidth = await JsRuntime.InvokeAsync<int>("getBodyWidth");        
            //todo 제대로된 계산할 필요가 있음.

            if (bodyWidth  > paperWidth)
                leftOffset = - (25 + paperWidth) / 2;
            else
                leftOffset = -(bodyWidth / 2) + 16;

            await this.InvokeAsync(StateHasChanged);
        });        
    }
}
