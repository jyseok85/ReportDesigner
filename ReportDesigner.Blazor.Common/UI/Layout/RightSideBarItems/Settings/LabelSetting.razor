@using System.Drawing;
@inject DesignerOptionService Options
@inject DesignerCSSService CSS
@inject MultiLanguageService DD
@inject ControlModificationServcie ModificationService
@inject SelectedControlService SelectedControlService

<div class="label-setting">
    <RadzenPanelMenuItem Text="Design" >
        <div class="side-panel-contents-background">
            <RadzenStack class="property-stack" Orientation="@CSS.Orientation" Gap="@CSS.Gap" Reverse="@CSS.Reverse" JustifyContent="@CSS.JustifyContent" Wrap="@CSS.Wrap">
                <RadzenText class= "property-displayName">Name</RadzenText>
                <RadzenTextBox class="w-100 property-item" @bind-Value=ControlName></RadzenTextBox>
            </RadzenStack>
        </div>        
    </RadzenPanelMenuItem>
    <Appearance @ref=appearance></Appearance>
    @if (SelectedControlService.CurrentSelectedModel.Type != ReportComponentModel.Control.Band)
    {
        <Font @ref=font></Font>
    }
    <DataSource @ref=datasource></DataSource>
    <Layout @ref=layout Type="SelectedControlService.CurrentSelectedModel.Type"></Layout>
</div>

<style>
    .selectbar-icon-only{
        --rz-panel-menu-icon-2nd-level-margin:0;
    }
    .color-picker{
        --rz-colorpicker-value-border-radius: 10px;
        height:inherit;
    }
    .small-height{
        height:10px !important;
    }
    .property-stack{
        align-items:center !important;
        height:30px;
        margin:0.5rem;
    }


    .property-stack-2nd {
        align-items: center !important;
        height: 30px;
        margin: 0rem;
    }
    .property-displayName{
        min-width:7rem;
        max-width:7rem;
        margin-top:0.5rem; /* 폰트사이즈 0.7rem 의 경우 */
        user-select: none; /* 드래그 or 더블클릭 선택 막기 */
    }

    .property-displayName-small {
        text-align: center;
        min-width: 1rem;
        max-width: 1rem;
        margin-top: 0.5rem; /* 폰트사이즈 0.7rem 의 경우 */
        user-select: none; /* 드래그 or 더블클릭 선택 막기 */
    }
    .property-displayName-2nd{
        
        min-width: 3.5rem;
        max-width: 3.5rem;
        margin-top: 0.5rem; /* 폰트사이즈 0.7rem 의 경우 */
        user-select: none; /* 드래그 or 더블클릭 선택 막기 */
    }
    .property-sub {
        margin-left: 0.5rem;
        min-width: 6.5rem;
    }
    .property-item{
        height:inherit;
        width:100%;
    } 
    .property-dropdown{
        display: block;
        padding: 5px 3px 3px 7px;
        --rz-input-height: 1.8rem;
        --rz-input-font-size: 0.7rem;
    }
    .label-setting{
        --rz-panel-menu-item-padding:0.5rem;
        --rz-panel-menu-item-background-color: #EDEDED;
        --rz-text-body1-font-size:0.7rem;
        --rz-input-font-size:0.7rem;
        --rz-input-padding:0.3rem 0.5rem;
        font-weight:600;
        font-size:smaller;
    }
    .side-panel-contents-background {
        padding: 0.5rem;
        background-color: var(--rz-panel-menu-item-background-color);
    }
</style>
@code {
    Font font;
    Layout layout;
    DataSource datasource;
    Appearance appearance;

    private string ControlName
    {
        get
        {
            if (SelectedControlService is not null && SelectedControlService.CurrentSelectedModel is not null)
                return SelectedControlService.CurrentSelectedModel.Name;
            else
                return string.Empty;
        }
        set
        {
            SelectedControlService.CurrentSelectedModel.Name = value;
            Options.RefreshBody();

        }
    }

    public void RefreshState()
    {
        font.RefreshState();
        appearance.RefreshState();
        datasource.RefreshState();
        layout.RefreshState();
        StateHasChanged();
    }
   

}
