@inject DesignerOptionService Options
<RadzenSidebar class="rz-right-sidebar" @bind-Expanded="@showSidePanel" Style="border-left:solid 1px lightgray;">
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Stretch" JustifyContent="JustifyContent.SpaceBetween" Style="height:inherit;gap:0;">
        <RadzenStack Orientation="Orientation.Vertical" Style="flex-direction:inherit !important; background-color:red; height:inherit;transition: var(--rz-transition-all);--rz-panel-menu-item-transition: var(--rz-transition-all);">
            <RadzenStack Orientation="Orientation.Vertical" Style="transition: var(--rz-transition-all);--rz-panel-menu-item-transition: var(--rz-transition-all);">
                <RadzenPanelMenu Click="OnParentClicked" Style=@((this.showRightSidePanel ?"width:300px;":"width:0px;") +"transition: var(--rz-transition-all);") Multiple="@multiple">
                    @if (this.currentRightPanel == RightPanelType.Property)
                    {
                        <RadzenPanelMenuItem Text="General" Icon="home">
                            <RadzenPanelMenuItem Text="Buttons" Path="buttons" Icon="account_circle"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="Menu" Path="menu" Icon="line_weight"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="FileInput" Path="fileinput" Icon="attach_file"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="Dialog" Path="dialog" Icon="perm_media"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="Notification" Path="notification" Icon="announcement"></RadzenPanelMenuItem>
                        </RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="Inputs" Icon="payment">
                            <RadzenPanelMenuItem Text="CheckBox" Path="checkbox" Icon="check_circle"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="TextBox" Path="textbox" Icon="input"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="TextArea" Path="textarea" Icon="description"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="Password" Path="password" Icon="payment"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="Numeric" Path="numeric" Icon="aspect_ratio"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="DatePicker" Path="datepicker" Icon="date_range"></RadzenPanelMenuItem>
                        </RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="Data" Icon="save">
                            <RadzenPanelMenuItem Text="DataGrid" Path="datagrid" Icon="grid_on"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="DataList" Path="datalist" Icon="list"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="DropDown" Path="dropdown" Icon="dns"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="DropDownDataGrid" Path="dropdown-datagrid" Icon="receipt"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="ListBox" Path="listbox" Icon="view_list"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="TemplateForm" Path="templateform" Icon="line_style"></RadzenPanelMenuItem>
                        </RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="Containers" Icon="account_box">
                            <RadzenPanelMenuItem Text="Tabs" Path="tabs" Icon="tab"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="Panel" Path="panel" Icon="content_paste"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="Fieldset" Path="fieldset" Icon="account_balance_wallet"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="Card" Path="card" Icon="line_style"></RadzenPanelMenuItem>
                        </RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="More">
                            <RadzenPanelMenuItem Click="OnChildClicked" Text="Item1"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Click="OnChildClicked" Text="Item2"></RadzenPanelMenuItem>
                            <RadzenPanelMenuItem Text="More items">
                                <RadzenPanelMenuItem Text="More sub items">
                                    <RadzenPanelMenuItem Click="OnChildClicked" Text="Item3"></RadzenPanelMenuItem>
                                    <RadzenPanelMenuItem Click="OnChildClicked" Text="Item4"></RadzenPanelMenuItem>
                                </RadzenPanelMenuItem>
                            </RadzenPanelMenuItem>
                        </RadzenPanelMenuItem>
                    }
                    else if (this.currentRightPanel == RightPanelType.Settings)
                    {
                        <RadzenPanelMenuItem Text="Paper" Icon="description">
                            <PaperSetting></PaperSetting>
                        </RadzenPanelMenuItem>
                    }

                </RadzenPanelMenu>
            </RadzenStack>
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Vertical" Style="border-left: 1px solid lightgray;">
            <RadzenPanelMenu DisplayStyle="MenuItemDisplayStyle.Icon" ShowArrow=false>
                <RadzenPanelMenuItem Text="Property" Icon="edit_attributes" Click="ShowRightPanel" />
                <RadzenPanelMenuItem Text="FieldList" Icon="storage" Click="ShowRightPanel" />
                <RadzenPanelMenuItem Text="ObjectBrowser" Icon="account_tree" Click="ShowRightPanel" />
                <RadzenPanelMenuItem Text="Settings" Icon="settings" Click="ShowRightPanel" />
            </RadzenPanelMenu>
        </RadzenStack>
    </RadzenStack>

</RadzenSidebar>
@code {
    bool showSidePanel = false;

    enum RightPanelType
    {
        Property,
        FieldList,
        ObjectBrowser,
        Settings
    }
    bool multiple = true;

    private RightPanelType currentRightPanel = RightPanelType.Property;
    private bool showRightSidePanel = false;
    void ShowRightPanel(MenuItemEventArgs args)
    {
        bool isFold = false;
        switch (args.Text.ToUpper())
        {
            case "PROPERTY":
                if (currentRightPanel == RightPanelType.Property && showRightSidePanel == true)
                {
                    isFold = false;
                }
                else
                {
                    isFold = true;
                    this.currentRightPanel = RightPanelType.Property;
                }
                break;
            case "FIELDLIST":
                if (currentRightPanel == RightPanelType.FieldList && showRightSidePanel == true)
                {
                    isFold = false;
                }
                else
                {
                    isFold = true;
                    this.currentRightPanel = RightPanelType.FieldList;
                }
                break;
            case "OBJECTBROWSER":
                if (currentRightPanel == RightPanelType.ObjectBrowser && showRightSidePanel == true)
                {
                    isFold = false;
                }
                else
                {
                    isFold = true;
                    this.currentRightPanel = RightPanelType.ObjectBrowser;
                }
                break;
            case "SETTINGS":
                if (currentRightPanel == RightPanelType.Settings && showRightSidePanel == true)
                {
                    isFold = false;
                }
                else
                {
                    isFold = true;
                    this.currentRightPanel = RightPanelType.Settings;
                }
                break;
        }

        if (this.showRightSidePanel != isFold)
        {
            this.showRightSidePanel = isFold;
            Options.FirePaperSizeChangedEvent(100);
        }

        StateHasChanged();

    }
    void OnChildClicked(MenuItemEventArgs args)
    {
    }
    void OnParentClicked(MenuItemEventArgs args)
    {
    }
}
